<!DOCTYPE html ><html lang="en-US"><head><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" href="../css/bulma.css" /><link rel="stylesheet" href="../css/font-awesome.min.css" /><link rel="stylesheet" href="../css/presentationStyle.css" /><link rel="stylesheet" href="../css/vs.min.css" /><script src="../scripts/jquery-3.5.1.min.js"></script><script src="../scripts/clipboard.min.js"></script><script src="../scripts/highlight.min.js"></script><script src="../scripts/presentationStyle.js"></script><title>ETL Methods</title><meta name="Title" content="Methods" /><meta name="Help.Id" content="Methods.T:SD.Interop.Types.ETL" /><meta name="Help.ContentType" content="Reference" /><meta name="container" content="SD.Interop.Types" /><meta name="guid" content="e4bccd9f-a472-02e6-9947-2c79a494ce46" /><meta name="tocFile" content="../toc/IDCBBA.xml" /></head><body><div class="fixedLayout"><div id="Header" class="fixedHeader"><div class="pageHeader level mb-0 py-2 px-4"><div id="TitleContainer" class="level-left"><div id="DocumentationTitle" class="level-item">A Sandcastle Documented Class Library</div></div><div id="LangFilterSearchContainer" class="level-right"><div class="level-item"><div class="dropdown is-hoverable"><div class="dropdown-trigger"><button class="button" aria-haspopup="true" aria-controls="dropdown-menu"><span id="CurrentLanguage"></span><span class="icon is-small"><i class="fa fa-angle-down" aria-hidden="true"></i></span></button></div><div class="dropdown-menu" role="menu"><div id="LanguageSelections" class="dropdown-content"><a class="dropdown-item languageFilterItem" data-languageId="cs">C#</a><a class="dropdown-item languageFilterItem" data-languageId="vb">VB</a><a class="dropdown-item languageFilterItem" data-languageId="cpp">C++</a><a class="dropdown-item languageFilterItem" data-languageId="fs">F#</a></div></div></div></div><div class="level-item"><form id="SearchForm" action="#" onsubmit="TransferToSearchPage(); return false;"><div class="field"><div class="control has-icons-left"><input id="SearchTerms" class="input" type="text" maxlength="200" placeholder="Search" /><span class="icon is-small is-left"><i class="fa fa-search"></i></span><button id="SearchButton" type="submit" class="is-hidden"></button></div></div></form></div></div></div></div><div class="fixedContent"><nav class="breadcrumb my-1 px-2 border-bottom" role="navigation"><ul id="TopicBreadcrumbs" /></nav><div id="ContentContainer" class="columns pl-5 pr-5 fixedContent"><div id="ShowHideTOCColumn" class="column is-hidden-tablet"><a id="ShowHideTOC">Show/Hide TOC</a></div><div id="TOCColumn" class="column is-hidden-mobile"><nav class="toc"><ul id="TableOfContents" class="toc-menu" /></nav></div><div id="Resizer" class="is-hidden"></div><div id="TopicContent" class="column content is-7"><h1>ETL Methods</h1><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Methods</h2><div id="IDADASection"><table id="MethodList" class="table is-hoverable"><tr><td><a href="783e5fb7-2283-31b6-bb7e-bd37c855de75.htm">AddPath</a></td><td>
            Adds a path to the list of path (Connectors)
            </td></tr><tr><td><a href="2456dfda-790e-62b2-a32a-5c71486dd01b.htm">Decode(String)</a></td><td>
            Analyzes the string 'wyMdhm' to determine if it corresponds to a valid DateTime.
            
            This method does not always return a value represented by the pattern. 
            For example, 'w.y-2-d.10:12' represents any day in February at 10:12, 
            while 'mo.2025-M-d.h:20' represents any Monday in 2025 at 20 minutes past any hour.
            The latter format will return null until the resulting date is a Monday.
            </td></tr><tr><td><a href="7f569234-d031-9519-45c9-5c9602de7c90.htm">Decode(String, DateTime)</a></td><td>
            defined only for debug pourposes. Refer to the other overloaded method.
            </td></tr><tr><td><a href="8d061f06-fe6c-aab7-ce72-96f8bf34a075.htm">DelPath</a></td><td>
            Removes the path (a working folder) from the Connectors.ini
            </td></tr><tr><td><a href="https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)" target="_blank" rel="noopener noreferrer">Equals</a></td><td>Determines whether the specified object is equal to the current object.<br />(Inherited from <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>)</td></tr><tr><td><a href="https://learn.microsoft.com/dotnet/api/system.object.finalize" target="_blank" rel="noopener noreferrer">Finalize</a></td><td>Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.<br />(Inherited from <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>)</td></tr><tr><td><a href="https://learn.microsoft.com/dotnet/api/system.object.gethashcode" target="_blank" rel="noopener noreferrer">GetHashCode</a></td><td>Serves as the default hash function. <br />(Inherited from <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>)</td></tr><tr><td><a href="https://learn.microsoft.com/dotnet/api/system.object.gettype" target="_blank" rel="noopener noreferrer">GetType</a></td><td>Gets the <a href="https://learn.microsoft.com/dotnet/api/system.type" target="_blank" rel="noopener noreferrer">Type</a> of the current instance.<br />(Inherited from <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>)</td></tr><tr><td><a href="07f38d3b-14fb-a24a-f9b4-41d49c6ddb2a.htm">Initialize</a></td><td>
            Reads all the information starting from the Connectors.ini through all the referenced ini
            </td></tr><tr><td><a href="d3c4c0bc-f0b7-5bb3-d748-8ab5a5d30f36.htm">Load</a></td><td>
            Loads one single 'data-file' following the 'instruction' provided by the 
            associated INI file (The MetaData)
            This action can always be performed without checking when it was scheduled 
            (because an operator can manually upload individual files from the console).
            </td></tr><tr><td><a href="c29cca8d-05a2-2262-66e3-e90677955322.htm">LoadAll</a></td><td>
            Firstly runs the method 'Initialize' to refresh the overal data architecture.
            From 'Initialize' receives an bject containing an image of the data.
            Loops over the data, then, checks if it is time for the scheduled task, 
            and executes it if it is the right time.
            </td></tr><tr><td><a href="b9d6513f-e092-5d04-630b-aa64039c9560.htm">LoadHttpAsync</a></td><td>
            Forces a load regardless the HASH code (if the file is changed or not). This is the mothod called from the outside by a HTTP call
            </td></tr><tr><td><a href="bdf4967e-9aae-20f0-28ac-d63958d0f545.htm">Masters</a></td><td>
            Returns all INI files whose name contains the word "Master" within the given directory.
            </td></tr><tr><td><a href="https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone" target="_blank" rel="noopener noreferrer">MemberwiseClone</a></td><td>Creates a shallow copy of the current <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>.<br />(Inherited from <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>)</td></tr><tr><td><a href="1e1094cf-3c8b-5585-771b-62b3f084205c.htm">Pause</a></td><td> </td></tr><tr><td><a href="d70c5d08-d40c-4c01-e555-ede66df80681.htm">ReadAPI</a></td><td>
            Executes the configured HTTP request, parses the returned JSON and streams each row
            into the supplied callback for database insertion.
            </td></tr><tr><td><a href="4b5dbdad-90d2-76fb-1fa5-1db0a24a0683.htm">ReadAPI2</a></td><td> </td></tr><tr><td><a href="6227a580-27ef-0208-869e-1caee4c67b7b.htm">ReadJSON(File, MetaData, Action<span id="LSTE860CE56_0" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span><span id="LSTE860CE56_1" data-languageSpecificText="cpp=array&lt;"></span>String<span id="LSTE860CE56_2" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span><span id="LSTE860CE56_3" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Reads the data a single row at the time, from an JSON file and calls the callback 'load' that loads the row into the DB
            The JSON file must be an array of objects:   
            </td></tr><tr><td><a href="f527f14e-a634-4a4c-2e1e-aefada361594.htm">ReadJSON(JSON, MetaData, Action<span id="LSTE860CE56_4" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span><span id="LSTE860CE56_5" data-languageSpecificText="cpp=array&lt;"></span>String<span id="LSTE860CE56_6" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span><span id="LSTE860CE56_7" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Parses JSON content and streams each record into the provided callback.
            </td></tr><tr><td><a href="08454ecc-c78b-e295-b5c1-c49a552bd79a.htm">ReadXLS(String, String, <span id="LSTE860CE56_8" data-languageSpecificText="cpp=array&lt;"></span>String<span id="LSTE860CE56_9" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Action<span id="LSTE860CE56_10" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span><span id="LSTE860CE56_11" data-languageSpecificText="cpp=array&lt;"></span>String<span id="LSTE860CE56_12" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span><span id="LSTE860CE56_13" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            reads the data a single row at the time, from an Excel file and calls the callback 'load' that loads the row into the DB
            </td></tr><tr><td><a href="74c61ee7-a3a1-d8b2-fb49-fcfc60943f35.htm">ReadXLS(String, String, Int32, <span id="LSTE860CE56_14" data-languageSpecificText="cpp=array&lt;"></span>String<span id="LSTE860CE56_15" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Action<span id="LSTE860CE56_16" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span><span id="LSTE860CE56_17" data-languageSpecificText="cpp=array&lt;"></span>String<span id="LSTE860CE56_18" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span><span id="LSTE860CE56_19" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td> </td></tr><tr><td><a href="f213e540-8584-e1bb-d382-c9c1296226bf.htm">ReadXML</a></td><td>
            Reads the data a single row at the time, from an XML file and calls the callback 'load' that loads the row into the DB
            The XML file must have the following structure:
            Main Node; children nodes; children nodes with the values of the columns    
            </td></tr><tr><td><a href="30d97dbc-5283-0c8f-b216-25fec2eefb78.htm">ToRowColumn</a></td><td>
            Converts a excell like coordinates (for example E9) to a pair of numbers.
            </td></tr><tr><td><a href="https://learn.microsoft.com/dotnet/api/system.object.tostring" target="_blank" rel="noopener noreferrer">ToString</a></td><td>Returns a string that represents the current object.<br />(Inherited from <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>)</td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>See Also</h2><div id="seeAlsoSection"><h4>Reference</h4><div><a href="ba0bc87d-8869-60e9-ccb4-6287dea9a9e1.htm">ETL Class</a></div><div><a href="54515e69-71b7-bac7-55c8-8ce94b982352.htm">SD.Interop.Types Namespace</a></div></div></div><div id="InThisArticleColumn" class="column is-hidden-mobile"><nav class="menu sticky is-hidden"><p class="menu-label"><strong>In This Article</strong></p><ul id="InThisArticleMenu" class="menu-list"><li><a class="quickLink">Methods</a></li><li><a class="quickLink">See Also</a></li></ul></nav></div></div></div></div><script>$(function(){
SetDefaultLanguage("cs");
LoadTocFile(null, null);
InitializeQuickLinks();

$(".toggleSection" ).click(function () {
    SectionExpandCollapse(this);
});

$(".toggleSection").keypress(function () {
    SectionExpandCollapseCheckKey(this, event)
});
});</script></body></html>